{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\DBMS\\\\5thsemproject\\\\client\\\\src\\\\pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n  const addComment = () => {\n    if (newComment.length !== 0) {\n      axios.post(\"http://localhost:3001/comments\", {\n        commentBody: newComment,\n        PostId: id\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          alert('You need to be logged in');\n        } else {\n          const commentToAdd = {\n            commentBody: newComment,\n            username: response.data.username\n          };\n          setComments([...comments, commentToAdd]);\n          setNewComment(\"\");\n        }\n      });\n    } else {\n      alert('Empty comment body');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [\" \", postObject.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: postObject.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          autoComplete: \"off\",\n          value: newComment,\n          onChange: event => {\n            setNewComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \" Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"  Username : \", comment.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"7L4aHWDeWEG0/obUbx5Ket+BFag=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Post","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","get","then","response","data","addComment","length","post","commentBody","PostId","headers","accessToken","localStorage","getItem","error","alert","commentToAdd","username","title","postText","event","target","value","map","comment","key"],"sources":["E:/Projects/DBMS/5thsemproject/client/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Post() {\r\n  let { id } = useParams();\r\n  const [postObject, setPostObject] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\r\n      setPostObject(response.data);\r\n    });\r\n\r\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\r\n      setComments(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const addComment = () => {\r\n    if(newComment.length !== 0){\r\n    axios.post(\"http://localhost:3001/comments\",\r\n        {\r\n          commentBody: newComment,\r\n          PostId: id,\r\n        },\r\n        {\r\n          headers: {accessToken: localStorage.getItem(\"accessToken\")}\r\n        }).then((response) => {\r\n        if (response.data.error) {\r\n          alert('You need to be logged in');\r\n        } else {\r\n          const commentToAdd = { commentBody: newComment,  username: response.data.username};\r\n          setComments([...comments, commentToAdd]);\r\n          setNewComment(\"\");\r\n        }\r\n      });\r\n  }else{\r\n    alert('Empty comment body')\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"postPage\">\r\n      <div className=\"leftSide\">\r\n        <div className=\"post\" id=\"individual\">\r\n          <div className=\"title\"> {postObject.title} </div>\r\n          <div className=\"body\">{postObject.postText}</div>\r\n          <div className=\"footer\">{postObject.username}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rightSide\">\r\n        <div className=\"addCommentContainer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Comment...\"\r\n            autoComplete=\"off\"\r\n            value={newComment}\r\n            onChange={(event) => {\r\n              setNewComment(event.target.value);\r\n            }}\r\n          />\r\n          <button onClick={addComment}> Add Comment</button>\r\n        </div>\r\n        <div className=\"listOfComments\">\r\n          {comments.map((comment, key) => {\r\n            return (\r\n              <div key={key} className=\"comment\">\r\n                {comment.commentBody}\r\n                <label>  Username : {comment.username}</label>\r\n                <button>x</button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}